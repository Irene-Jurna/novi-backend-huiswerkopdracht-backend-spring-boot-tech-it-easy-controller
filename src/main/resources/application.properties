# ------------------------------- datasource PostgreSQl -------------------------------

    ##naam van het platform
spring.sql.init.platform=postgres 

    ##adres van de database waarmee je verbinding wilt maken
spring.datasource.url=jdbc:postgresql://localhost:8080/techItEasy

    ##inloggen in je database
spring.datasource.username=irene
spring.datasource.password=relata10

    ##de driver om CRUD operaties op je database uit te voeren (in plaats van postgres driver kan het ook Mysql zijn). ChatGPT: de driver legt de connectie tussen de Java API en de database
spring.datasource.driver-class-name=org.postgresql.Driver

#  ------------------------------- jpa -------------------------------

    ##dit is de database die we gebruiken
spring.jpa.database=postgresql

    ##automatisch tabellen genereren
spring.jpa.show-sql=true

#  ------------------------------- generate schema ddl to create tables -------------------------------

    ##laat zien in de terminal welke sql code wordt uitgevoerd
spring.jpa.generate-ddl=true

    ## geef aan op welke manier de tabellen worden gemaakt (create-drop betekent: bij elke herstart worden de tabellen verwijderd en weer opnieuw gemaakt, inclusief de inhoud)
spring.jpa.hibernate.ddl-auto=create

#  ------------------------------- database initialization with data.sql after hibernate -------------------------------

    ##initialiseer de database met data uit het dtaa.sql bestand (geldt voor beide onderstaande gevallen)
spring.sql.init.mode=always
spring.jpa.defer-datasource-initialization=true

#  ------------------------------- hibernate -------------------------------
    ##geeft aan welk sql dialect je gebruikt (kan ook mysql zijn)
spring.jpa.properties.hibernate.dialect=org.hibernate.dialect.PostgreSQLDialect
